name: Benchmark

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '**/.gitignore'
      - 'Dockerfile'
      - '.dockerignore'
      - '**.sample'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '**/.gitignore'
      - 'Dockerfile'
      - '.dockerignore'
      - '**.sample'

env:
  # See: Makefile
  BENCHMARK_DIR: .test
  BENCHMARK_FILE: bench.new
  BENCHSTAT_VS_LATEST: /tmp/benchstat-vs-latest
  BENCHMARK_LATEST: BENCHMARK_LATEST.txt

jobs:
  benchmark:
    name: Benchmark with Go version ${{ matrix.go }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        go: [ '1.17' ]

    steps:
      - id: setup-go
        name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - id: checkout
        name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - id: cache
        name: Cache dependencies and tools
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - id: mod-dl
        name: Download dependency go modules
        run: make mod-dl

      - id: mod-tools-install
        name: Install go tools on module-aware mode
        run: GOBIN=${GITHUB_WORKSPACE}/bin make mod-tools-install

      - id: add-gobin-path
        name: Add GITHUB_WORKSPACE/bin into PATH
        # DEPRECATED: run: echo "::add-path::${GITHUB_WORKSPACE}/bin"
        run: echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH

      - id: bench
        name: Run benchmarks
        run: make bench

      - id: upload-benchmark
        name: Upload a current benchmark result
        uses: actions/upload-artifact@v2
        with:
          name: benchmark
          path: ${{ env.BENCHMARK_DIR }}/${{ env.BENCHMARK_FILE }}

      - id: benchstat-current-vs-latest
        name: Run benchstat current vs latest
        continue-on-error: true
        run: make benchstat-ci | tee ${{ env.BENCHSTAT_VS_LATEST }}

      - id: upload-benchstat-vs-latest
        name: Upload benchstat result current vs latest for Continuous Benchmarking
        uses: actions/upload-artifact@v2
        with:
          name: benchstat-vs-latest
          path: ${{ env.BENCHSTAT_VS_LATEST }}

  register-latest-result:
    name: Register latest benchmark result
    if: github.event_name == 'push'
    needs: [ benchmark ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        # go: [ '1.17' ]

    steps:
      # - id: setup-go
      #   name: Set up Go ${{ matrix.go }}
      #   uses: actions/setup-go@v2
      #   with:
      #     go-version: ${{ matrix.go }}

      - id: checkout
        name: Check out code into the Go module directory
        uses: actions/checkout@v2

      # - id: cache
      #   name: Cache dependencies and tools
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/go/pkg/mod
      #     key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
      #     restore-keys: |
      #       ${{ runner.os }}-go-

      # - id: mod-dl
      #   name: Download dependency go modules
      #   run: make mod-dl

      # - id: mod-tools-install
      #   name: Install go tools on module-aware mode
      #   run: GOBIN=${GITHUB_WORKSPACE}/bin make mod-tools-install

      # - id: add-gobin-path
      #   name: Add GITHUB_WORKSPACE/bin into PATH
      #   # DEPRECATED: run: echo "::add-path::${GITHUB_WORKSPACE}/bin"
      #   run: echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH

      # >>>>> START for release process
      - id: download-benchmark
        name: Download a current benchmark result
        continue-on-error: true
        uses: actions/download-artifact@v2
        with:
          name: benchmark
          path: ${{ env.BENCHMARK_DIR }}

      - id: create-benchmark-latest-txt-on-bench-latest-branch
        name: Create BENCHMARK_LATEST.txt from current benchmark result with switching branch to bench-latest branch
        continue-on-error: true
        run: |
          ls -lrt ${{ env.BENCHMARK_DIR }}
          git fetch --all
          git branch -a
          git checkout -t origin/bench-latest
          cp -f ${{ env.BENCHMARK_DIR }}/${{ env.BENCHMARK_FILE }} ${{ env.BENCHMARK_LATEST }}
          git status -s

      # See: https://stackoverflow.com/questions/57921401/push-to-origin-from-github-action
      - id: commit-push-benchmark-latest
        name: Commit and push BENCHMARK_LATEST.txt to bench-latest branch (only on push)
        continue-on-error: true
        run: |
          pwd
          ls -l
          git config --global user.name 'goldeneggg'
          git config --global user.email 'jpshadowapps@gmail.com'
          git add ${{ env.BENCHMARK_LATEST }}
          git commit -m "Automated update latest benchmark report"
          git push origin bench-latest
      # >>>>> END for release process
